#!/bin/bash
#Author and Maintained by : Ghanshyam Dusane
#Variables

MYSQLSTRINGCHECK=`cat /mosaic/MosaicScheduler/conf/mysql_connection_config.txt | wc -l`
DBHOST=`cat /mosaic/MosaicScheduler/conf/mysql_connection_config.txt | grep varHost | cut -d "=" -f2`
DBUSERNAME=`cat /mosaic/MosaicScheduler/conf/mysql_connection_config.txt | grep varUsrN | cut -d "=" -f2`
DBPASSWORD=`cat /mosaic/MosaicScheduler/conf/mysql_connection_config.txt | grep varPwd | cut -d "=" -f2`
if [ "$MYSQLSTRINGCHECK" -gt 1 ];then
DBUSERNAME=`cat /mosaic/MosaicScheduler/conf/config.properties | grep USERNAME | grep otisadmin | cut -d "=" -f2`
DBPASSWORD=`cat /mosaic/MosaicScheduler/conf/config.properties | grep DBPASSWORD | cut -d "=" -f2`
DBHOST=`echo $DBUSERNAME.mysql.database.azure.com`
fi
dat=`date --date='+5 hour 30 minutes' '+%Y-%m-%d'`

ENV=""

SENDGRIDAPIUSER=""
SENDGRIDAPIPASSWORD=""
EMAIL_TO=""
FROM_EMAIL="$ENV-cbm-pipeline-monitoring@gmail.com"
FROM_NAME="$ENV-CBM-Pipeline-Monitoring"

touch /tmp/queryop
#Enter the Pipeline Number which you want to monitor
echo "<>" > /tmp/piplinelist.txt

#Enter the Pipeline number where you want to receive a alert only once in a day if failed
echo "<>" > /tmp/cbpiplinelist.txt

while read u1
do
#------------------------------------------------------------------------#
runbookid="$u1"
echo $runbookid
touch /tmp/longrunning-$runbookid
touch /tmp/queryrunbookid-$runbookid
touch /tmp/flowlongrunning-$runbookid
mysql -h $DBHOST -u $DBUSERNAME -p$DBPASSWORD -e "use scheduler; select * from runbook_instance where startedat LIKE '$dat%' and runbookid LIKE '$runbookid' ORDER BY instanceid DESC LIMIT 1;" > /tmp/queryop-$runbookid
query=`cat /tmp/queryop-$runbookid | grep FAILED | wc -l`

if [ "$query" -gt 0 ] ;then

        echo "sending mail"
        instanceid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $1}'`
        runbookid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $2}'`
        startedat=`cat /tmp/queryop-$runbookid | grep : | awk '{print $3 " " $4}'`
        startdate=`cat /tmp/queryop-$runbookid | grep : | awk '{print $3 "-" $4}'`
        status="FAILED"
        SUBJECT="$startdate-$ENV-DataPipeline-Failed-$runbookid";
        mysql -h $DBHOST -u $DBUSERNAME -p$DBPASSWORD -e "use scheduler; select * from runbook_instance_details where runbook_instance_id=$instanceid;" > /tmp/queryrunbookid-$runbookid
        stepname=`cat /tmp/queryrunbookid-$runbookid | grep FAILED | awk '{print $11}' | head -1`

        curl https://api.sendgrid.com/api/mail.send.json \
        -F to=$EMAIL_TO -F subject=$SUBJECT \
        -F text="PipelineReporting" --form-string html="<head>
<style>
table, th, td {
  border: 2px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
}
th {
  text-align: center;
  font-size: 13pt;
  font-weight: bold;
}
td {
  text-align: center;
}
</style>
</head>
<body>
<h2>$ENV : Data Pipeline $runbookid failed</h2><table border="1"><tr bgcolor="skyblue"><th>instanceid</th><th>runbookid</th><th>startedat</th><th>status</th></tr><tr><td>$instanceid</td><td>$runbookid</td><td>$startedat</td><td>$status</td></tr></table><h5> Note : Data Pipeline <u> $runbookid </u> started failing from following flow : <u> $stepname </u><h5>
</body>" \
        -F from=$FROM_EMAIL -F api_user=$SENDGRIDAPIUSER -F api_key=$SENDGRIDAPIPASSWORD
else
echo "Everyting is okay"
fi

CURRENTTIME=`date --date='+5 hour 30 minutes' '+%R' | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }'`
PIPERUNNINGSTATE=`cat /tmp/queryop-$runbookid | grep RUNNING | wc -l`
if [ "$PIPERUNNINGSTATE" -gt 0 ];then
                PIPESTARTTIME=`cat /tmp/queryop-$runbookid | grep RUNNING | awk '{print $4}' | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }'`
        RUNNINGTIME=$(($CURRENTTIME - $PIPESTARTTIME))
        echo Running time of pipline $runbookid is $RUNNINGTIME seconds.
                longrunsentcheck=`cat /tmp/longrunning-$runbookid | grep mail | wc -l`

        if [ "$RUNNINGTIME" -ge 7200 ] && [ "$longrunsentcheck" -eq 0 ] ;then
                echo "Sending mail for long running pipeline" > /tmp/longrunning-$runbookid
                                instanceid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $1}'`
                                runbookid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $2}'`
                                startedat=`cat /tmp/queryop-$runbookid | grep : | awk '{print $3 " " $4}'`
                                startdate=`cat /tmp/queryop-$runbookid | grep : | awk '{print $3 "-" $4}'`
                                status="RUNNING"
                                SUBJECT="$startdate-$ENV-DataPipeline-RUNNING-$runbookid";

                                mysql -h $DBHOST -u $DBUSERNAME -p$DBPASSWORD -e "use scheduler; select * from runbook_instance_details where runbook_instance_id=$instanceid;" > /tmp/queryrunbookid-$runbookid
                                runbook_instance_id=`cat /tmp/queryrunbookid-$runbookid | grep RUNNING | awk '{print $4}' | head -1`
                                flowstartedat=`cat /tmp/queryrunbookid-$runbookid | grep RUNNING | awk '{print $5 " " $6}'| head -1 `
                                stepname=`cat /tmp/queryrunbookid-$runbookid | grep RUNNING | awk '{print $9}' | head -1`

                                SUBJECT="$startdate-$ENV-DataPipeline-RUNNING-$runbookid";
                                curl https://api.sendgrid.com/api/mail.send.json \
        -F to=$EMAIL_TO -F subject=$SUBJECT \
        -F text="PipelineReporting" --form-string html="<head>
<style>
table, th, td {
  border: 2px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
}
th {
  text-align: center;
  font-size: 13pt;
  font-weight: bold;
}
td {
  text-align: center;
}
</style>
</head>
<body>
<h2>$ENV : Data Pipeline $runbookid is in running state from 2 hours</h2><table border="1"><tr bgcolor="orange"><th>instanceid</th><th>runbookid</th><th>startedat</th><th>status</th></tr><tr><td>$instanceid</td><td>$runbookid</td><td>$startedat</td><td>$status</td></tr></table>
<h2> Running Flow Details</h2>
<table border="1"><tr bgcolor="orange"><th>runbookid</th><th>runbook_instance_id</th><th>startedat</th><th>stepname</th><th>status</th></tr><tr><td>$runbookid</td><td>$runbook_instance_id</td><td>$flowstartedat</td><td>$stepname</td><td>$status</td></tr></table>
</body>" \
        -F from=$FROM_EMAIL -F api_user=$SENDGRIDAPIUSER -F api_key=$SENDGRIDAPIPASSWORD
        fi
fi
#Flow Monitoring
instanceid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $1}'`
mysql -h $DBHOST -u $DBUSERNAME -p$DBPASSWORD -e "use scheduler; select * from runbook_instance_details where runbook_instance_id=$instanceid;" > /tmp/queryrunbookid-$runbookid
FLOWRUNNINGSTATE=`cat /tmp/queryrunbookid-$runbookid | grep RUNNING | wc -l`
if [ "$FLOWRUNNINGSTATE" -gt 0 ];then
								
i=0
while read line
do a[$i]=$line
echo "--------------------------"
#echo ${a[$i]}
CURRENTTIME=`date --date='+5 hour 30 minutes' '+%R' | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }'`
FLOWSTARTTIME=`echo ${a[$i]} | grep RUNNING | awk '{print  $6}' |  awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }'`
FLOWNAME=`echo ${a[$i]} | awk '{print  $9}'`
touch /tmp/flowlongrunning-$runbookid-$FLOWNAME
if [ "$FLOWSTARTTIME" -gt 0 ]; then

echo $FLOWSTARTTIME
echo $FLOWNAME
echo $CURRENTTIME
FLOWRUNNINGTIME=$(( $CURRENTTIME - $FLOWSTARTTIME ))
echo Running time of Flow in pipeline is $FLOWRUNNINGTIME seconds.
longrunflowsentcheck=`cat /tmp/flowlongrunning-$runbookid-$FLOWNAME | grep mail | wc -l`
                if [ "$FLOWRUNNINGTIME" -ge 1800 ] && [ "$longrunflowsentcheck" -eq 0 ] ; then
                echo "Sending mail for long running flow" > /tmp/flowlongrunning-$runbookid-$FLOWNAME
                echo "Sending mail for long running"
                fi
fi
echo "--------------------------"
i=$(( i+1 ))
done < <(tail -n "+2" /tmp/queryrunbookid-$runbookid)

fi

if [ "$FLOWRUNNINGSTATE" -eq 0 ] && [ "$PIPERUNNINGSTATE" -gt 0 ] ;then
echo "Pipeline is in stucked state"
fi

curtim=`date --date='+5 hour 30 minutes' '+%R'`
tim="12:10"
if [ "$curtim" == "$tim" ] ;then
echo > /tmp/longrunning-$runbookid
echo > /tmp/flowlongrunning-$runbookid
echo > /tmp/flowlongrunning-$runbookid-$FLOWNAME
fi
#------------------------------------------------------------------------#
done < /tmp/piplinelist.txt

while read u1
do
#------------------------------------------------------------------------#
#For Callback Only
runbookid="$u1"
echo $runbookid
touch /tmp/queryop-$runbookid
mysql -h $DBHOST -u $DBUSERNAME -p$DBPASSWORD -e "use scheduler; select * from runbook_instance where startedat LIKE '$dat%' and runbookid LIKE '$runbookid' ORDER BY instanceid DESC LIMIT 1;" > /tmp/queryop-$runbookid
query=`cat /tmp/queryop-$runbookid | grep FAILED | wc -l`
sentcheck=`cat /tmp/queryop-$runbookid | grep mail | wc -l`

if [ "$query" -gt 0 ] && [ "$sentcheck" -eq 0 ] ;then

        echo "sending mail" > /tmp/queryop-$runbookid
        instanceid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $1}'`
        runbookid=`cat /tmp/queryop-$runbookid | grep : | awk '{print $2}'`
        startedat=`cat /tmp/queryop-$runbookid | grep : | awk '{print $3 " " $4}'`
        startdate=`cat /tmp/queryop-$runbookid | grep : | awk '{print $3 "-" $4}'`
        status="FAILED"
        SUBJECT="$startdate-$ENV-DataPipeline-Failed-$runbookid";
        mysql -h $DBHOST -u $DBUSERNAME -p$DBPASSWORD -e "use scheduler; select * from runbook_instance_details where runbook_instance_id=$instanceid;" > /tmp/queryrunbookid-$runbookid
        stepname=`cat /tmp/queryrunbookid-$runbookid | grep FAILED | awk '{print $11}' | head -1`

        curl https://api.sendgrid.com/api/mail.send.json \
        -F to=$EMAIL_TO -F subject=$SUBJECT \
        -F text="PipelineReporting" --form-string html="<head>
<style>
table, th, td {
  border: 2px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
}
th {
  text-align: center;
  font-size: 13pt;
  font-weight: bold;
}
td {
  text-align: center;
}
</style>
</head>
<body>
<h2>$ENV : Data Pipeline $runbookid failed</h2><table border="1"><tr bgcolor="skyblue"><th>instanceid</th><th>runbookid</th><th>startedat</th><th>status</th></tr><tr><td>$instanceid</td><td>$runbookid</td><td>$startedat</td><td>$status</td></tr></table><h5> Note : Data Pipeline <u> $runbookid </u> started failing from following flow : <u> $stepname </u><h5>
</body>" \
        -F from=$FROM_EMAIL -F api_user=$SENDGRIDAPIUSER -F api_key=$SENDGRIDAPIPASSWORD
else
echo "Everyting is okay"
fi

curtim=`date --date='+5 hour 30 minutes' '+%R'`
tim="12:10"
if [ "$curtim" == "$tim" ] ;then
echo > /tmp/queryop-$runbookid
fi
#------------------------------------------------------------------------#
done < /tmp/cbpiplinelist.txt
